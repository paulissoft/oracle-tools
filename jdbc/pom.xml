<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.paulissoft</groupId>
    <artifactId>pato</artifactId>
    <version>${revision}</version>
  </parent>
  <groupId>com.paulissoft.pato</groupId>
  <artifactId>jdbc</artifactId>
  <packaging>pom</packaging>
  <description>Java JDBC utilities</description>

  <properties>

    <!-- GJP 2023-03-02 To Java 11 -->
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
    <!-- https://winterbe.com/posts/2018/08/29/migrate-maven-projects-to-java-11-jigsaw/ -->
    <!-- Property to set the release flag of the Java compiler (JDK 9 and above) -->
    <maven.compiler.release>${maven.compiler.source}</maven.compiler.release>
    <maven.compiler.force.javac>false</maven.compiler.force.javac>
    
    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
    <project.resources.sourceEncoding>${encoding}</project.resources.sourceEncoding>

    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>

    <lint.flag>all,-options,-path,-processing</lint.flag>
    <!--lint.flag>unchecked</lint.flag-->
    <maven.compiler.argument>-Xlint:${lint.flag}</maven.compiler.argument>

    <!-- Checkstyle -->
    <maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
    <HikariCP.version>3.4.2</HikariCP.version>
    <!--lombok.version>1.18.30</lombok.version-->
    <spring.version>5.2.3.RELEASE</spring.version>
    <spring.boot.version>2.2.3.RELEASE</spring.boot.version>
    <commons-lang3.version>3.9</commons-lang3.version>
    <!--jol-core.version>0.17</jol-core.version-->
    <!-- For Spring, we have to use the old javax:annotation-api, not the new jakarta:annotation-api. -->
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    <!-- But we include the new one as well for other frameworks. -->
    <jakarta.annotation-api.version>3.0.0-M1</jakarta.annotation-api.version>
    <jmh.version>1.37</jmh.version>
    <logback-classic.version>1.5.18</logback-classic.version>

    <checkstyle.skip>false</checkstyle.skip>
    <maven.test.skip>true</maven.test.skip>

    <jdk.attach.allowAttachSelf>true</jdk.attach.allowAttachSelf>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${HikariCP.version}</version>
      </dependency>
      <!--dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency-->
      <!-- https://mvnrepository.com/artifact/org.springframework/spring-beans -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring.boot.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-validation</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>
      <!--dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
          <version>${commons-lang3.version}</version>
          </dependency-->
      <!-- For Spring, we have to use the old javax:annotation-api, not the new jakarta:annotation-api. -->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation-api.version}</version>
      </dependency>
      <!-- But other frameworks may need this new one. -->
      <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
        <version>${jakarta.annotation-api.version}</version>
      </dependency>
      <!--dependency>
        <groupId>org.openjdk.jol</groupId>
        <artifactId>jol-core</artifactId>
        <version>${jol-core.version}</version>
      </dependency-->
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${jmh.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>${jmh.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-classic.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <scope>provided</scope>
    </dependency>
    <!--dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency-->
    <!-- A POM type artifact -->
    <dependency>
      <groupId>${ojdbc.groupId}</groupId>
      <artifactId>${ojdbc.artifactId}</artifactId>
      <version>${ojdbc.version}</version>
      <type>${ojdbc.type}</type>
      <scope>provided</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.springframework/spring-beans -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <!--dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
        </dependency-->
    <!-- For Spring, we have to use the old javax:annotation-api, not the new jakarta:annotation-api. -->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- But other frameworks may need this new one. -->
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!--dependency>
      <groupId>org.openjdk.jol</groupId>
      <artifactId>jol-core</artifactId>
    </dependency-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <configuration>
              <configLocation>${maven.multiModuleProjectDirectory}/jdbc/checkstyle.xml</configLocation>
              <inputEncoding>UTF-8</inputEncoding>
              <failsOnError>true</failsOnError>
              <consoleOutput>true</consoleOutput>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <failOnViolation>true</failOnViolation>
              <logViolationsToConsole>true</logViolationsToConsole>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <modules>
    <module>smart-pool-data-source</module>
    <module>smart-pool-data-source-jmh</module>
  </modules>

  <profiles>
    <profile>
      <id>versions-check</id>
      <properties>
        <default.goal>versions:display-dependency-updates versions:display-parent-updates versions:display-plugin-updates versions:display-property-updates</default.goal>
      </properties>
    </profile>
  </profiles>

</project>
